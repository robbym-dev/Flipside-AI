from uagents import Agent, Context, Model
from newsapi import NewsApiClient
from openai import OpenAI
from uagents import Agent, Model
from geopy.geocoders import Nominatim
from TwitterAPI import TwitterAPI
from keywords import get_keywords
from notif_user import search
api = TwitterAPI("customer and access tokens here")
client = OpenAI()
newsapi = NewsApiClient(api_key='api key here')
news = Agent(name="news", seed="news recovery phrase")
prompt = """Given the current context [CONTEXT], please generate three keywords of one word each that are likely to be important for 
        looking up articles that are most similiar to the context. Print only three keywords. There will be a few news resources so generate unique keywords.
        To generate the list of keywords, consider the following factors:
        Relevance: How relevant are the keywords to the context?
        Frequency: How often do the keywords appear in articles related to the context?
        Distinctiveness: How unique are the keywords compared to other keywords related to the context?
        Contextual relevance: How relevant are the keywords to the current context, including any additional information provided?

        Please provide a list of keywords that could be useful for searching for articles that could answer the query, in the order of importance.
        For example, if the context is a health and wellness blog, and the list of keywords generated by the LLM might look like this:
        Meditation, Benefits, Health, Wellness, Mindfulness, Stress relief, Mental health, Brain function, Relaxation, Mindful living

        Your output should be only in this: "keyword1, keyword2, ...". Make sure this is it. Only output the keywords. 

        Do not output it in a list and new lines such as:
        1. Example1
        2. Example2

        Your output should be keywords which are separated by commas. give around 5 keywords"""
class Message(Model):
    message: str
ans = None
address = None
async def get_article_from_newsapi():
    """Call NewsAPI to get article links based on keywords"""
    all_articles = newsapi.get_top_headlines(sources="bbc-news, abc-news, bleacher-report, bloomberg, business-insider, cnn, fortune, hacker-news")
    return all_articles

async def find_location(address):
    geolocator = Nominatim(user_agent="geoapiExercises")
    location = geolocator.geocode(address)
    return location.latitude, location.longitude

@news.on_interval(period=28800) # every 8 hours
async def handle_message(ctx: Context):
    articles = await get_article_from_newsapi()
    keywords = await get_keywords(articles)
    global ans
    if address:
        long, lat = find_location(address)
        r1 = api.request('statuses/filter', {'locations': f"{long - 1}, {lat - 1}, {long + 1}, {lat + 1}"})
    r2 = api.request('search/tweets', {'q':keywords})
    r1.append(r2)
    search(r1) # notify user
 
if __name__ == "__main__":
    news.run()